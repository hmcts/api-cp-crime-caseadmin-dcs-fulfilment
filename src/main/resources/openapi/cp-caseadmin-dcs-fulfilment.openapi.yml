openapi: 3.0.0
servers:
  - description: APIHub API Auto Mocking CP case administration APIs for DCS transaction fulfilment
    url: https://virtserver.swaggerhub.com/HMCTS-DTS/api-cp-crime-caseadmin-dcs-fulfilment/0.0.0
info:
  version: 0.0.0
  title: HMCTS Common Platform case administration status tracking APIs
  description: HMCTS Common Platform case administration status tracking APIs
  contact:
    email: no-reply@hmcts.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
components:
  securitySchemes:
    BearerAuth:
      description: Valid Bearer Token
      type: http
      scheme: bearer
  schemas:
    uuid:
      type: string
      pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
    datePattern:
      type: string
      pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
    successPayload:
      description: 'Payload representing the successful state of the asynchronous API call'
      type: object
      properties:
        caseId:
          allOf:
            - $ref: '#/components/schemas/uuid'
            - description: "Unique identifier to track the ID of the case on the CP system"
        caseReferral:
          allOf:
            - $ref: '#/components/schemas/uuid'
            - description: "Unique identifier to track the ID of the case on the external system"
        defendants:
          type: array
          items:
            type: object
            properties:
              defendantId:
                allOf:
                  - $ref: '#/components/schemas/uuid'
                  - description: "Unique identifier to track the ID of the defendant on the CP system"
              defendantReferral:
                allOf:
                  - $ref: '#/components/schemas/uuid'
                  - description: "Unique identifier to track the ID of the defendant on the DCS system"
            required:
              - defendantId
              - defendantReferral
      required:
        - caseId
        - caseReferral
    errorPayload:
      description: 'Payload representing the error state of the asynchronous API call'
      type: object
      properties:
        errorCode:
          type: string
          enum:
            - "CASE_ALREADY_EXISTS"
            - "DEFENDANT_ALREADY_EXISTS"
            - "CASE_NOT_FOUND"
            - "DEFENDANT_NOT_FOUND"
            - "CASE_NOT_CREATED"
            - "DEFENDANT_NOT_CREATED"
            - "DEFENDANT_NOT_UPDATED"
            - "CASE_HAS_SPLIT_OR_MERGED"
            - "DOCUMENT_CONTAINS_VIRUS"
            - "DOCUMENT_NOT_UPLOADED"
          description: "Error code for why the asynchronous API call failed"
        errorMessage:
          type: string
          description: "Additional detailed information about the error"
          maxLength: 255
      required:
        - errorCode
        - errorMessage
    errorResponsePayload:
      description: 'Payload representing the error response from the asynchronous API call'
      type: object
      properties:
        transactionRef:
          allOf:
            - $ref: '#/components/schemas/uuid'
            - description: "Unique identifier to track the specific message payload"
        errorMessage:
          type: string
          description: "Additional detail information about the error"
          maxLength: 255
      required:
        - transactionRef
        - errorMessage

security:
  - BearerAuth: []
paths:
  /healthcheck:
    get:
      summary: Healthcheck endpoint to get status of CP service
      description: Inform status of service hosted by CP
      operationId: healthcheck
      tags:
        - Healthcheck
      responses:
        '200':
          description: OK. Service healthy and running
        '503':
          description: Service not available

  /transaction/{transactionRef}:
    post:
      summary: Send status updates on transaction sent earlier
      description: Sending updates on the status of a transaction that was sent earlier from CP to DCS.
      operationId: updateTransactionStatus
      tags:
        - Transaction status updates
      parameters:
        - in: path
          name: transactionRef
          description: The unique reference number identifying message sent earlier from CP to DCS
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        description: Message transaction details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                successPayload:
                  $ref: '#/components/schemas/successPayload'
                errorPayload:
                  $ref: '#/components/schemas/errorPayload'
              required:
                - oneOf
                  - successPayload
                  - errorPayload
              additionalProperties: false
            example:
              caseId: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905484'
              caseReferral: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905484'
              defendants:
                - defendantId: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905484'
                  defendantReferral: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905484'
      responses:
        '202':
          description: Accepted.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponsePayload"
              example:
                transactionRef: '8191c165-e9e4-4fd7-ac6d-5bfd04690f77'
                errorMessage: 'Some error message'
